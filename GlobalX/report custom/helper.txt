({	        
    ApplyFilter: function(component, event, helper) { 
        component.set("v.Adddisable",true);
        
        var captureFrom = component.get('v.captureFrom');
        var captureTo = component.get('v.captureTo');
        
        var lkSchoolYearId = '';
        var lkSchoolYear = component.get('v.lkSchoolYear');
        if(lkSchoolYear != null){
            lkSchoolYearId = lkSchoolYear.Id;
        }
        
        var lkCampusId = '';
        var lkCampus = component.get('v.lkCampus');
        if(lkCampus != null){
            lkCampusId = lkCampus.Id;
        }
        /*if(lkCampusId == '' || lkCampusId == undefined){
        	helper.showToastMessage(component, 'Please choose Case Method Deposit!', "error", "dismissable");  
            component.set("v.Adddisable",false);
            return;
        }     */                   
         
         var action = component.get("c.GetSourceByCondition");
         action.setParams({
             captureFrom: captureFrom,    
             captureTo: captureTo,
             schoolYear: lkSchoolYearId,
             campus: lkCampusId
         })
         action.setCallback(this, function(response) {               
             var data = response.getReturnValue();               
             var status = data.Success;
             if(status)
             {   
                 component.set("v.lstSource",data.Result1);                
                 component.set("v.objSource",data.Result2);
                 component.set("v.objSourceFooter",data.Result3);                 
             }
             else
             {
                 helper.showToastMessage(component, data.Message, "error", "dismissable");                 
             }
             component.set("v.Adddisable",false);
         });
         $A.enqueueAction(action);
     },
    
    BuildInit: function(component, event, helper) {           
        var reccordId= component.get("v.recordId");                           
        var action = component.get("c.GetInit");
        action.setParams({
            recordId: reccordId            
        })
        action.setCallback(this, function(response) {            
            var data = response.getReturnValue();                           
            var status = data.Success;
            if(status)
            {                                                
                component.set("v.lstSource",data.Result1);
                component.set("v.lstSourceFilter",data.Result1);
                component.set("v.objSource",data.Result2);
                //get check list        
                ////var selectedRecord = helper.getChecklist(component);
                
                //Arrange
                ////helper.ArrangeCheckList(component,selectedRecord);
            }else{
                $A.get('e.force:refreshView').fire();
                $A.get("e.force:closeQuickAction").fire() 
                helper.showToastMessage(component, data.Message, "error", "dismissable");        
            }
        });
        
        $A.enqueueAction(action);	                    
    },    
    
    showToastMessage : function(component, message, variant, mode) {           
        component.find("notifLib").showToast({
            "title": "Message",
            "message": message,
            "variant": variant,
            "mode": mode
        });
    },
    
    exportXlsxData: function(component) { 
        debugger;
        var lstSource = component.get('v.lstSource');       
        var objSourceFooter = component.get('v.objSourceFooter');
        
        XlsxPopulate.fromBlankAsync().then(
            workbook => 
            {                
                var sheet = workbook.sheet("Sheet1");                                       
                sheet.range("D1:H1").value('ADMISSIONS REPORT - TEAM LEADERs BI-WEEKLY MEETING').merged(true).style({ bold: 'true', fontSize: '18', horizontalAlignment: 'center', verticalAlignment: 'center'});
        
        //sheet.cell('A3').value('Campus');
        sheet.range("A3:A5").value('Campus').merged(true).style({ border: {style: 'thin', color: '000000'}, bold: 'true', horizontalAlignment: 'center', verticalAlignment: 'center'});                
        sheet.range("B3:B5").value('Grade').merged(true).style({ border: {style: 'thin', color: '000000'}, bold: 'true', horizontalAlignment: 'center', verticalAlignment: 'center'});
        sheet.range("C3:C5").value('TOTAL \nCURRENT \nNUMBER OF \nSTUDENT').merged(true).style({ border: {style: 'thin', color: '000000'}, bold: 'true', horizontalAlignment: 'center', verticalAlignment: 'center'});
        sheet.range("D3:E3").value('TARGET 23-24').merged(true).style({ border: {style: 'thin', color: '000000'}, bold: 'true', horizontalAlignment: 'center', verticalAlignment: 'center'});
        sheet.range("D4:E4").value('').merged(true).style({ border: {style: 'thin', color: '000000'}, bold: 'true', horizontalAlignment: 'center', verticalAlignment: 'center'});
		sheet.cell('D5').value('IN').style({ border: {style: 'thin', color: '000000'}, bold: 'true', horizontalAlignment: 'center'});
        sheet.cell('E5').value('OUT').style({ border: {style: 'thin', color: '000000'}, bold: 'true', horizontalAlignment: 'center'});
        sheet.range("F3:G3").value('No of Qualified \n Inquiries SY2324 & \ncompared to YTD \nnumber of SY2223').merged(true).style({ border: {style: 'thin', color: '000000'}, bold: 'true', horizontalAlignment: 'center', verticalAlignment: 'center'});
        sheet.range("G4:G4").value('').merged(true).style({ border: {style: 'thin', color: '000000'}, bold: 'true', horizontalAlignment: 'center', verticalAlignment: 'center'});
        sheet.cell('F5').value('Empty 1').style({ border: {style: 'thin', color: '000000'}, bold: 'true', horizontalAlignment: 'center'});
        sheet.cell('G5').value('Summer 23-23').style({ border: {style: 'thin', color: '000000'}, bold: 'true', horizontalAlignment: 'center'});
        sheet.range("H3:K3").value('Number of taking P.Tests SY 2324 & \ncompared to YTD number of SY2223').merged(true).style({ border: {style: 'thin', color: '000000'}, bold: 'true', horizontalAlignment: 'center', verticalAlignment: 'center'});
        sheet.range("H4:I4").value('Total Test').merged(true).style({ border: {style: 'thin', color: '000000'}, bold: 'true', horizontalAlignment: 'center', verticalAlignment: 'center'});
        sheet.range("J4:K4").value('Passed test').merged(true).style({ border: {style: 'thin', color: '000000'}, bold: 'true', horizontalAlignment: 'center', verticalAlignment: 'center'});
        sheet.cell('H5').value('Empty 2').style({ border: {style: 'thin', color: '000000'}, bold: 'true', horizontalAlignment: 'center'});
        sheet.cell('I5').value('Summer 23-23').style({ border: {style: 'thin', color: '000000'}, bold: 'true', horizontalAlignment: 'center'});
        sheet.cell('J5').value('Empty 3').style({ border: {style: 'thin', color: '000000'}, bold: 'true', horizontalAlignment: 'center'});
        sheet.cell('K5').value('Summer 23-23').style({ border: {style: 'thin', color: '000000'}, bold: 'true', horizontalAlignment: 'center'});
        sheet.range("L3:Q3").value('Number of New students SY2324 & \ncompared to YTD number of SY2223').merged(true).style({ border: {style: 'thin', color: '000000'}, bold: 'true', horizontalAlignment: 'center', verticalAlignment: 'center'});
        sheet.range("L4:M4").value('Paid Deposit (seminars/sibling/ \nthank you/ scholarship) (1)').merged(true).style({ border: {style: 'thin', color: '000000'}, bold: 'true', horizontalAlignment: 'center', verticalAlignment: 'center'});
        sheet.range("N4:O4").value('Paid tuition fee (2)').merged(true).style({ border: {style: 'thin', color: '000000'}, bold: 'true', horizontalAlignment: 'center', verticalAlignment: 'center'});
        sheet.range("P4:Q4").value('Total = (1) + (2)').merged(true).style({ border: {style: 'thin', color: '000000'}, bold: 'true', horizontalAlignment: 'center', verticalAlignment: 'center'});
        sheet.cell('L5').value('Empty 4').style({ border: {style: 'thin', color: '000000'}, bold: 'true', horizontalAlignment: 'center'});
        sheet.cell('M5').value('Summer 23-23').style({ border: {style: 'thin', color: '000000'}, bold: 'true', horizontalAlignment: 'center'});
        sheet.cell('N5').value('Empty 5').style({ border: {style: 'thin', color: '000000'}, bold: 'true', horizontalAlignment: 'center'});
        sheet.cell('O5').value('Summer 23-23').style({ border: {style: 'thin', color: '000000'}, bold: 'true', horizontalAlignment: 'center'});
        sheet.cell('P5').value('Empty 6').style({ border: {style: 'thin', color: '000000'}, bold: 'true', horizontalAlignment: 'center'});
        sheet.cell('Q5').value('Summer 23-23').style({ border: {style: 'thin', color: '000000'}, bold: 'true', horizontalAlignment: 'center'});
        sheet.range("R3:U3").value('Summer 2023 & compared to YTD \nnumber of SY22-23').merged(true).style({ border: {style: 'thin', color: '000000'}, bold: 'true', horizontalAlignment: 'center', verticalAlignment: 'center'});
        sheet.range("R4:S4").value('Current Student - \nSummer').merged(true).style({ border: {style: 'thin', color: '000000'}, bold: 'true', horizontalAlignment: 'center', verticalAlignment: 'center'});
        sheet.range("T4:U4").value('New students - \nSummer').merged(true).style({ border: {style: 'thin', color: '000000'}, bold: 'true', horizontalAlignment: 'center', verticalAlignment: 'center'});
        sheet.cell('R5').value('Empty 7').style({ border: {style: 'thin', color: '000000'}, bold: 'true', horizontalAlignment: 'center'});
        sheet.cell('S5').value('Summer 23-23').style({ border: {style: 'thin', color: '000000'}, bold: 'true', horizontalAlignment: 'center'});
        sheet.cell('T5').value('Empty 8').style({ border: {style: 'thin', color: '000000'}, bold: 'true', horizontalAlignment: 'center'});
        sheet.cell('U5').value('Summer 23-23').style({ border: {style: 'thin', color: '000000'}, bold: 'true', horizontalAlignment: 'center'});
        sheet.range("V3:AA3").value('OUT students & compared to YTD number of \nSY22-23').merged(true).style({ border: {style: 'thin', color: '000000'}, bold: 'true', horizontalAlignment: 'center', verticalAlignment: 'center'});
        sheet.range("V4:W4").value('Withdrew').merged(true).style({ border: {style: 'thin', color: '000000'}, bold: 'true', horizontalAlignment: 'center', verticalAlignment: 'center'});
        sheet.range("X4:Y4").value('Intend to leave').merged(true).style({ border: {style: 'thin', color: '000000'}, bold: 'true', horizontalAlignment: 'center', verticalAlignment: 'center'});
        sheet.range("Z4:AA4").value('Total Withdrew \n+ Intend to leave').merged(true).style({ border: {style: 'thin', color: '000000'}, bold: 'true', horizontalAlignment: 'center', verticalAlignment: 'center'});
        sheet.cell('V5').value('Empty 9').style({ border: {style: 'thin', color: '000000'}, bold: 'true', horizontalAlignment: 'center'});
        sheet.cell('W5').value('Summer 23-23').style({ border: {style: 'thin', color: '000000'}, bold: 'true', horizontalAlignment: 'center'});
        sheet.cell('X5').value('Empty 10').style({ border: {style: 'thin', color: '000000'}, bold: 'true', horizontalAlignment: 'center'});
        sheet.cell('Y5').value('Summer 23-23').style({ border: {style: 'thin', color: '000000'}, bold: 'true', horizontalAlignment: 'center'});
        sheet.cell('Z5').value('Empty 11').style({ border: {style: 'thin', color: '000000'}, bold: 'true', horizontalAlignment: 'center'});
        sheet.cell('AA5').value('Summer 23-23').style({ border: {style: 'thin', color: '000000'}, bold: 'true', horizontalAlignment: 'center'});
        
        sheet.column("A").width(40);
        sheet.column("B").width(20);
        sheet.column("C").width(30);
        sheet.column("D").width(20);
        sheet.column("E").width(20);
        sheet.column("F").width(20);
        sheet.column("G").width(25);
        sheet.column("H").width(20);
        sheet.column("I").width(20);
        sheet.column("J").width(20);
        sheet.column("K").width(20);
        sheet.column("L").width(20);
        sheet.column("M").width(20);
        sheet.column("N").width(20);
        sheet.column("O").width(20);
        sheet.column("P").width(20);
        sheet.column("Q").width(20);
        sheet.column("R").width(20);
        sheet.column("S").width(20);
        sheet.column("T").width(20);
        sheet.column("U").width(20);        
        sheet.column("V").width(20);
        sheet.column("W").width(20);
        sheet.column("X").width(20);
        sheet.column("Y").width(20);
        sheet.column("Z").width(20);
        sheet.column("AA").width(20);
        
        //row               		         
        var idx = 6;
        var startIdx; 
        var endIdx; 
        for (var x = 0; x < lstSource.length; x++) {        
            var objFull = lstSource[x];
            var lstRow = objFull.lstRow;                       
            startIdx = idx;
            
            for (var j = 0; j < lstRow.length; j++) {
                var objRow = lstRow[j]; 
                sheet.cell('B' + idx).style({border: {style: 'thin', color: '000000'}}).value(objRow.objGrade.Name);
                sheet.cell('C' + idx).style({border: {style: 'thin', color: '000000'}, bold: 'true'}).value( );
                sheet.cell('D' + idx).style({border: {style: 'thin', color: '000000'}, bold: 'true'}).value( );
                sheet.cell('E' + idx).style({border: {style: 'thin', color: '000000'}, bold: 'true'}).value( );
                sheet.cell('F' + idx).style({border: {style: 'thin', color: '000000'}}).value(objRow.TotalLeadQualified);
                sheet.cell('G' + idx).style({border: {style: 'thin', color: '000000'}, bold: 'true'}).value( );
                sheet.cell('H' + idx).style({border: {style: 'thin', color: '000000'}}).value(objRow.TotalCandidateApplicant);
                sheet.cell('I' + idx).style({border: {style: 'thin', color: '000000'}, bold: 'true'}).value( );
                sheet.cell('J' + idx).style({border: {style: 'thin', color: '000000'}}).value(objRow.TotalCandidateOffered);
                sheet.cell('K' + idx).style({border: {style: 'thin', color: '000000'}, bold: 'true'}).value( );
                sheet.cell('L' + idx).style({border: {style: 'thin', color: '000000'}}).value(objRow.TotalCandidatePaidDeposit);
                sheet.cell('M' + idx).style({border: {style: 'thin', color: '000000'}, bold: 'true'}).value( );
                sheet.cell('N' + idx).style({border: {style: 'thin', color: '000000'}}).value(objRow.TotalCandidate1stTermPaidTuition);
                sheet.cell('O' + idx).style({border: {style: 'thin', color: '000000'}, bold: 'true'}).value( );
                sheet.cell('P' + idx).style({border: {style: 'thin', color: '000000'}}).value(objRow.Total);               
                sheet.cell('Q' + idx).style({border: {style: 'thin', color: '000000'}, bold: 'true'}).value( );
                sheet.cell('R' + idx).style({border: {style: 'thin', color: '000000'}, bold: 'true'}).value( );
                sheet.cell('S' + idx).style({border: {style: 'thin', color: '000000'}, bold: 'true'}).value( );
                sheet.cell('T' + idx).style({border: {style: 'thin', color: '000000'}, bold: 'true'}).value( );
                sheet.cell('U' + idx).style({border: {style: 'thin', color: '000000'}, bold: 'true'}).value( );
                sheet.cell('V' + idx).style({border: {style: 'thin', color: '000000'}, bold: 'true'}).value( );
                sheet.cell('W' + idx).style({border: {style: 'thin', color: '000000'}, bold: 'true'}).value( );
                sheet.cell('X' + idx).style({border: {style: 'thin', color: '000000'}, bold: 'true'}).value( );
                sheet.cell('Y' + idx).style({border: {style: 'thin', color: '000000'}, bold: 'true'}).value( );
                sheet.cell('Z' + idx).style({border: {style: 'thin', color: '000000'}, bold: 'true'}).value( );
                sheet.cell('AA' + idx).style({border: {style: 'thin', color: '000000'}, bold: 'true'}).value( );
                
                idx++; 
            }           
            endIdx = idx - 1;
            
            // Merge ô chứa tên của campus từ hàng bắt đầu đến hàng kết thúc của campus
            sheet.range(`A${startIdx}:A${endIdx}`).merged(true).style({border: {style: 'thin', color: '000000'}, bold: 'true', horizontalAlignment: 'center', verticalAlignment: 'center'}).value(objFull.objCampus.Name);
            
            sheet.cell(`A${idx}`).style({border: {style: 'thin', color: '000000'}, bold: 'true'}).value('Total [' + objFull.objCampus.Name + ']');
            sheet.cell(`B${idx}`).style({border: {style: 'thin', color: '000000'}, bold: 'true'}).value();
            sheet.cell(`C${idx}`).style({border: {style: 'thin', color: '000000'}, bold: 'true'}).value();
            sheet.cell(`D${idx}`).style({border: {style: 'thin', color: '000000'}, bold: 'true'}).value();
            sheet.cell(`E${idx}`).style({border: {style: 'thin', color: '000000'}, bold: 'true'}).value();
            sheet.cell(`F${idx}`).style({border: {style: 'thin', color: '000000'}, bold: 'true'}).value(objFull.TotalLeadQualified);
            sheet.cell(`G${idx}`).style({border: {style: 'thin', color: '000000'}, bold: 'true'}).value();
            sheet.cell(`H${idx}`).style({border: {style: 'thin', color: '000000'}, bold: 'true'}).value(objFull.TotalCandidateApplicant);
            sheet.cell(`I${idx}`).style({border: {style: 'thin', color: '000000'}, bold: 'true'}).value();
            sheet.cell(`J${idx}`).style({border: {style: 'thin', color: '000000'}, bold: 'true'}).value(objFull.TotalCandidateOffered);
            sheet.cell(`K${idx}`).style({border: {style: 'thin', color: '000000'}, bold: 'true'}).value();
            sheet.cell(`L${idx}`).style({border: {style: 'thin', color: '000000'}, bold: 'true'}).value(objFull.TotalCandidatePaidDeposit);
            sheet.cell(`M${idx}`).style({border: {style: 'thin', color: '000000'}, bold: 'true'}).value();
            sheet.cell(`N${idx}`).style({border: {style: 'thin', color: '000000'}, bold: 'true'}).value(objFull.TotalCandidate1stTermPaidTuition);
            sheet.cell(`O${idx}`).style({border: {style: 'thin', color: '000000'}, bold: 'true'}).value();
            sheet.cell(`P${idx}`).style({border: {style: 'thin', color: '000000'}, bold: 'true'}).value(objFull.Total);           
            sheet.cell(`Q${idx}`).style({border: {style: 'thin', color: '000000'}, bold: 'true'}).value();
            sheet.cell(`R${idx}`).style({border: {style: 'thin', color: '000000'}, bold: 'true'}).value();
            sheet.cell(`S${idx}`).style({border: {style: 'thin', color: '000000'}, bold: 'true'}).value();
            sheet.cell(`T${idx}`).style({border: {style: 'thin', color: '000000'}, bold: 'true'}).value();
            sheet.cell(`U${idx}`).style({border: {style: 'thin', color: '000000'}, bold: 'true'}).value();
            sheet.cell(`V${idx}`).style({border: {style: 'thin', color: '000000'}, bold: 'true'}).value();
            sheet.cell(`W${idx}`).style({border: {style: 'thin', color: '000000'}, bold: 'true'}).value();
            sheet.cell(`X${idx}`).style({border: {style: 'thin', color: '000000'}, bold: 'true'}).value();
            sheet.cell(`Y${idx}`).style({border: {style: 'thin', color: '000000'}, bold: 'true'}).value();
            sheet.cell(`Z${idx}`).style({border: {style: 'thin', color: '000000'}, bold: 'true'}).value();
            sheet.cell(`AA${idx}`).style({border: {style: 'thin', color: '000000'}, bold: 'true'}).value();
            idx++;
        }            
               
        sheet.cell('A' + idx).style({border: {style: 'thin', color: '000000'}, bold: 'true'}).value("Total All VAS");
        sheet.cell('B' + idx).style({border: {style: 'thin', color: '000000'}}).value();
        sheet.cell('C' + idx).style({border: {style: 'thin', color: '000000'}, bold: 'true'}).value( );
        sheet.cell('D' + idx).style({border: {style: 'thin', color: '000000'}, bold: 'true'}).value( );
        sheet.cell('E' + idx).style({border: {style: 'thin', color: '000000'}, bold: 'true'}).value( );
        sheet.cell('F' + idx).style({border: {style: 'thin', color: '000000'}}).value(objSourceFooter.TotalLeadQualified);
        sheet.cell('G' + idx).style({border: {style: 'thin', color: '000000'}, bold: 'true'}).value( );
        sheet.cell('H' + idx).style({border: {style: 'thin', color: '000000'}}).value(objSourceFooter.TotalCandidateApplicant);
        sheet.cell('I' + idx).style({border: {style: 'thin', color: '000000'}, bold: 'true'}).value( );
        sheet.cell('J' + idx).style({border: {style: 'thin', color: '000000'}}).value(objSourceFooter.TotalCandidateOffered);
        sheet.cell('K' + idx).style({border: {style: 'thin', color: '000000'}, bold: 'true'}).value( );
        sheet.cell('L' + idx).style({border: {style: 'thin', color: '000000'}}).value(objSourceFooter.TotalCandidatePaidDeposit);
        sheet.cell('M' + idx).style({border: {style: 'thin', color: '000000'}, bold: 'true'}).value( );
        sheet.cell('N' + idx).style({border: {style: 'thin', color: '000000'}}).value(objSourceFooter.TotalCandidate1stTermPaidTuition);
        sheet.cell('O' + idx).style({border: {style: 'thin', color: '000000'}, bold: 'true'}).value( );
        sheet.cell('P' + idx).style({border: {style: 'thin', color: '000000'}}).value(objSourceFooter.Total);               
        sheet.cell('Q' + idx).style({border: {style: 'thin', color: '000000'}, bold: 'true'}).value( );
        sheet.cell('R' + idx).style({border: {style: 'thin', color: '000000'}, bold: 'true'}).value( );
        sheet.cell('S' + idx).style({border: {style: 'thin', color: '000000'}, bold: 'true'}).value( );
        sheet.cell('T' + idx).style({border: {style: 'thin', color: '000000'}, bold: 'true'}).value( );
        sheet.cell('U' + idx).style({border: {style: 'thin', color: '000000'}, bold: 'true'}).value( );
        sheet.cell('V' + idx).style({border: {style: 'thin', color: '000000'}, bold: 'true'}).value( );
        sheet.cell('W' + idx).style({border: {style: 'thin', color: '000000'}, bold: 'true'}).value( );
        sheet.cell('X' + idx).style({border: {style: 'thin', color: '000000'}, bold: 'true'}).value( );
        sheet.cell('Y' + idx).style({border: {style: 'thin', color: '000000'}, bold: 'true'}).value( );
        sheet.cell('Z' + idx).style({border: {style: 'thin', color: '000000'}, bold: 'true'}).value( );
        sheet.cell('AA' + idx).style({border: {style: 'thin', color: '000000'}, bold: 'true'}).value( );       
        
        // Write to file.
        // Generate download file.
        this.generateBlob(component, workbook);
        //return workbook.toFileAsync("./out.xlsx");    
    }); 
}, 
 
 generateBlob: function(component, workbook) {
    
    debugger; 
    var now = new Date();
    var fileName = `rpActualVsTargetVsLastYearCR_${now.getDate()}_${now.getMonth() + 1}_${now.getFullYear()}.xlsx`;
    //var fileName = 'abc.xlsx';
    workbook.outputAsync({
        type: 'base64'
    }).then(base64 => {
        component.set('v.downloadLink', `data:${XlsxPopulate.MIME_TYPE};base64,${base64}`);
    component.set('v.downloadName', fileName);
    
    var downloadEl = component.find('downloadLink').getElement();
    downloadEl.click();
    
    component.set('v.downloadLink', '');
    component.set('v.downloadName', '');
}).catch(err => {
    console.error(err);
});
}
})