public class Controller {
    
    /*@AuraEnabled
    public static Libraries.SourceResponse GetInit(string recordId)
    {                         
        Libraries.SourceResponse objResult = new Libraries.SourceResponse();        
        try
        {  
             
            if(lstStudent_Campus_Group_Program_Grade != null && lstStudent_Campus_Group_Program_Grade.size()>0){                    
                objResult.Result1 = lstStudent_Campus_Group_Program_Grade;
                objResult.Result2 = objClass;
                objResult.success = true;                                
            } 
            else{
                objResult.Message = 'Không tìm thấy sinh viên thỏa điều kiện';
            }                          
        } 
        catch(exception e)
        {
            objResult.Message = e.getMessage() + '-' + e.getStackTraceString() + e.getLineNumber();             
        }        
        return objResult;        
    }   */
    
    @AuraEnabled
    public static Libraries.SourceResponse GetSourceByCondition(string captureFrom, string captureTo, string schoolYear, string campus)
    {                         
        Libraries.SourceResponse objResult = new Libraries.SourceResponse();        
        try
        {               
            //Get SchoolYear
            Pricebook2 objSchoolYear = LibrariesReport.GetSchoolYearById(schoolYear);
            
            //Get map Grade
            //Map<Id, Grade__c> mpGrade = LibrariesReport.GetMapGrade();
            
            //Get map Campus
            Map<Id, Campus__c> mpCampus = LibrariesReport.GetMapCampus(campus);
           
            Set<Id> sGradeId = new Set<Id>();
            // Get list Lead total by condition
             List<string> lstLeadFieldKey = new List<string>();
            lstLeadFieldKey.add('Follow_up_Campus__c');        
            lstLeadFieldKey.add('Enroll_Grade__c');        
             
            List<string> lstLeadFieldTotal = new List<string>();
            lstLeadFieldTotal.add('numQualifiedContact__c');            
            List<AggregateResult> lstLeadTotal = LibrariesReport.GetListLeadTotalByCondition(captureFrom, captureTo, schoolYear, campus, lstLeadFieldKey, lstLeadFieldTotal);
            for(AggregateResult ar : lstLeadTotal){                                                
                string strGradeId = string.valueof(ar.get('Enroll_Grade__c')); 
                sGradeId.add(strGradeId);
            }
            
            
            // Get list Candidate total by condition
             List<string> lstCandidateFieldKey = new List<string>();
            lstCandidateFieldKey.add('Campus__c');        
            lstCandidateFieldKey.add('Enroll_Grade__c');  
            
            List<string> lstCanditionFieldTotal = new List<string>();
            lstCanditionFieldTotal.add('numApplicant__c');        
            lstCanditionFieldTotal.add('numOffered__c');        
            lstCanditionFieldTotal.add('numDepositPaid__c');        
            lstCanditionFieldTotal.add('num1stTermPaidTuition__c');        
            List<AggregateResult> lstCandidateTotal = LibrariesReport.GetListCandidateTotalByCondition(captureFrom, captureTo, schoolYear, campus, lstCandidateFieldKey, lstCanditionFieldTotal);
            
           for(AggregateResult ar : lstCandidateTotal){                            
                string strGradeId = string.valueof(ar.get('Enroll_Grade__c')); 
                sGradeId.add(strGradeId);
            }
            
             //Get map Grade
            Map<Id, Grade__c> mpGrade = LibrariesReport.GetMapGrade(sGradeId);
            
            //Build column
            WrapperColumn objColumn = new WrapperColumn();
            //system.debug('objSchoolYear: ' + objSchoolYear.Next_School_Year__r.Name);
            if(objSchoolYear != null){         
                if(objSchoolYear.Next_School_Year__c != null){
                    objColumn.SchoolYearName = objSchoolYear.Next_School_Year__r.Name;
                }
                objColumn.NextSchoolYearName  = objSchoolYear.Name;    
            }            
            
            //Build Source with Campus & Grade
            List<WrapperFull> lstFull = new List<WrapperFull>();            
            for(Campus__c objCampus : mpCampus.values()){
                WrapperFull objFull = new WrapperFull();
                objFull.objCampus = objCampus;                
                objFull.RowSpan = mpGrade.values().size();
                
                List<WrapperRow> lstRow = new List<WrapperRow>();
                for(Grade__c objGrade : mpGrade.values()){
                    WrapperRow objRow = new WrapperRow();                    
                    objRow.objGrade = objGrade;
                    lstRow.add(objRow);
                }
                
                objFull.lstRow = lstRow;
                lstFull.add(objFull);
            }
            
            decimal dTotalQualifiedContact = 0;   
            decimal dTotalApplicant = 0;                    
            decimal dTotalOffered = 0;        
            decimal dTotalDepositPaid = 0;        
            decimal dTotal1stTermPaidTuition = 0;
            decimal dTotal = 0;
            boolean isBreak = false;
            //Build Source with Lead total
            for(AggregateResult ar : lstLeadTotal){                                
                string strCampusId = string.valueof(ar.get('Follow_up_Campus__c')); 
                string strGradeId = string.valueof(ar.get('Enroll_Grade__c')); 
                decimal dQualifiedContact = (decimal)ar.get('numQualifiedContact__c'); 
                isBreak = false;
                for(WrapperFull objFull : lstFull){                    
                    if(objFull.objCampus.Id == strCampusId){
                        for(WrapperRow objRow : objFull.lstRow){
                            if(objRow.objGrade.Id == strGradeId){
                                objRow.TotalLeadQualified = dQualifiedContact;                            
                                dTotalQualifiedContact += dQualifiedContact;
                                isBreak = true;
                            }
                            if(isBreak){
                                break;
                            }
                        }                        
                    }
                    if(isBreak){                                                   
                        break;
                    }
                    
                }                
            }
            
            //Build Source with Candidate total
            for(AggregateResult ar : lstCandidateTotal){            
                string strCampusId = string.valueof(ar.get('Campus__c')); 
                string strGradeId = string.valueof(ar.get('Enroll_Grade__c')); 
                decimal dApplicant = (decimal)ar.get('numApplicant__c');                    
                decimal dOffered = (decimal)ar.get('numOffered__c');        
                decimal dDepositPaid = (decimal)ar.get('numDepositPaid__c');        
                decimal d1stTermPaidTuition = (decimal)ar.get('num1stTermPaidTuition__c');
                
                isBreak = false;
                for(WrapperFull objFull : lstFull){
                    if(objFull.objCampus.Id == strCampusId){
                        for(WrapperRow objRow : objFull.lstRow){
                            if(objRow.objGrade.Id == strGradeId){
                                objRow.TotalCandidateApplicant = dApplicant;
                                objRow.TotalCandidateOffered = dOffered;
                                objRow.TotalCandidatePaidDeposit = dDepositPaid;
                                objRow.TotalCandidate1stTermPaidTuition = d1stTermPaidTuition;
                                objRow.Total = dDepositPaid + d1stTermPaidTuition;   
                                
                                dTotalApplicant += dApplicant;
                                dTotalOffered += dOffered;
                                dTotalDepositPaid += dDepositPaid;
                                dTotal1stTermPaidTuition += d1stTermPaidTuition;
                                dTotal += dDepositPaid + d1stTermPaidTuition;
                                isBreak = true;
                            }
                            if(isBreak){
                                break;
                            }
                        }                        
                    }
                    if(isBreak){
                        break;
                    }
                }                
            }                                                                             
            
            //Sum total
            for(WrapperFull objFull : lstFull){                  
                objFull.TotalLeadQualified = 0;
                objFull.TotalCandidateApplicant = 0;
                objFull.TotalCandidateOffered = 0;
                objFull.TotalCandidatePaidDeposit = 0;
                objFull.TotalCandidate1stTermPaidTuition = 0;  
                objFull.Total = 0;
                for(WrapperRow objRow : objFull.lstRow){
                    if(objRow.TotalLeadQualified != null && objRow.TotalLeadQualified >0){
                    	objFull.TotalLeadQualified += objRow.TotalLeadQualified;    
                    }    
                    if(objRow.TotalCandidateApplicant != null && objRow.TotalCandidateApplicant >0){
                    	objFull.TotalCandidateApplicant += objRow.TotalCandidateApplicant;    
                    } 
                    if(objRow.TotalCandidateOffered != null && objRow.TotalCandidateOffered >0){
                    	objFull.TotalCandidateOffered += objRow.TotalCandidateOffered;    
                    } 
                    if(objRow.TotalCandidatePaidDeposit != null && objRow.TotalCandidatePaidDeposit >0){
                    	objFull.TotalCandidatePaidDeposit += objRow.TotalCandidatePaidDeposit;    
                    } 
                    if(objRow.TotalCandidate1stTermPaidTuition != null && objRow.TotalCandidate1stTermPaidTuition >0){
                    	objFull.TotalCandidate1stTermPaidTuition += objRow.TotalCandidate1stTermPaidTuition;    
                    } 
                    if(objRow.Total != null && objRow.Total >0){
                    	objFull.Total += objRow.Total;
                    } 
                }                
            }            
            
            //Build Row Total
            WrapperRow objRowTotal = new WrapperRow();
            objRowTotal.TotalLeadQualified = dTotalQualifiedContact;
            objRowTotal.TotalCandidateApplicant = dTotalApplicant;
            objRowTotal.TotalCandidateOffered = dTotalOffered;
            objRowTotal.TotalCandidatePaidDeposit = dTotalDepositPaid;
            objRowTotal.TotalCandidate1stTermPaidTuition = dTotal1stTermPaidTuition;
            objRowTotal.Total = dTotal;
                
            objResult.Result1 = lstFull;
            objResult.Result2 = objColumn;
            objResult.Result3 = objRowTotal;
            objResult.success = true;                                              
        } 
        catch(exception e)
        {
            objResult.Message = e.getMessage() + '-' + e.getStackTraceString() + e.getLineNumber();             
        }        
        return objResult;        
    }   
    
    public class WrapperFull{
        @AuraEnabled
        public Campus__c objCampus {get;set;}    
        
        @AuraEnabled
        public decimal RowSpan {get;set;}    
        
        @AuraEnabled
        public List<WrapperRow> lstRow {get;set;}        
       
        private void WrapperFull(){
            objCampus = new Campus__c();      
            lstRow = new List<WrapperRow>();
        }
        
        @AuraEnabled
        public Decimal TotalLeadQualified {get;set;}
        
        @AuraEnabled
        public Decimal TotalCandidateApplicant {get;set;}
        
        @AuraEnabled
        public Decimal TotalCandidateOffered {get;set;}
        
        @AuraEnabled
        public Decimal TotalCandidatePaidDeposit {get;set;}
        
        @AuraEnabled
        public Decimal TotalCandidate1stTermPaidTuition {get;set;}
        
        @AuraEnabled
        public Decimal Total {get;set;}
    }
    
    public class WrapperRow{                 
        @AuraEnabled
        public Grade__c objGrade {get;set;}
        
        @AuraEnabled
        public Decimal TotalLeadQualified {get;set;}
        
        @AuraEnabled
        public Decimal TotalCandidateApplicant {get;set;}
        
        @AuraEnabled
        public Decimal TotalCandidateOffered {get;set;}
        
        @AuraEnabled
        public Decimal TotalCandidatePaidDeposit {get;set;}
        
        @AuraEnabled
        public Decimal TotalCandidate1stTermPaidTuition {get;set;}
        
        @AuraEnabled
        public Decimal Total {get;set;}
        
        private void WrapperRow(){
            objGrade = new Grade__c();
        }
    }
    
    public class WrapperColumn{
        @AuraEnabled
        public string SchoolYearName {get;set;}
        
        @AuraEnabled
        public string NextSchoolYearName {get;set;}
    } 
    
    public static void l(){
        string l = '';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
         l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
         l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
         l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
         l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
         l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
         l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
         l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
         l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
        l='';
    }
}